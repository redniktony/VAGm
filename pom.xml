<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.vagm</groupId>
	<artifactId>vagmdroid</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>apk</packaging>
	<name>vagm</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<platform.version> 4.1.1.4</platform.version>
		<android.plugin.version>3.9.0-rc.1</android.plugin.version>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
		<slf4j.version>1.7.7</slf4j.version>
		<logback.android.version>1.1.1-2</logback.android.version>
		<maven.checkstyle.plugin>2.10</maven.checkstyle.plugin>
		<maven.pmd.plugin>2.7.1</maven.pmd.plugin>
		<maven.findbugs.plugin>2.5.2</maven.findbugs.plugin>
		<maven.surefire.plugin>2.16</maven.surefire.plugin>
		<codequality.version>0.0.1-SNAPSHOT</codequality.version>
		<java.version>1.7</java.version>
	</properties>

	<repositories>
		<repository>
			<id>achartengine</id>
			<name>Public AChartEngine repository</name>
			<url>https://repository-achartengine.forge.cloudbees.com/snapshot/</url>
		</repository>
		<!-- <repository>
			<id>vagm-code-quality-mvn-repo</id>
			<url>https://raw.githubusercontent.com/romif/vagm-code-quality/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository> -->
	</repositories>
	
	<pluginRepositories>
	    <pluginRepository>
	        <id>vagm-code-quality-mvn-repo</id>
			<url>https://raw.githubusercontent.com/romif/vagm-code-quality/mvn-repo/</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
	    </pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.google.android</groupId>
			<artifactId>android</artifactId>
			<version>${platform.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.roboguice</groupId>
			<artifactId>roboguice</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>org.achartengine</groupId>
			<artifactId>achartengine</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.tony19</groupId>
			<artifactId>logback-android-core</artifactId>
			<version>${logback.android.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.tony19</groupId>
			<artifactId>logback-android-classic</artifactId>
			<version>${logback.android.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>

		<dependency>
			<groupId>org.robolectric</groupId>
			<artifactId>robolectric</artifactId>
			<version>2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.10-FINAL</version>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>com.vagm</groupId>
				<artifactId>vagm-code-quality</artifactId>
				<version>${codequality.version}</version>
			</extension>
		</extensions>

		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.jayway.maven.plugins.android.generation2</groupId>
					<artifactId>android-maven-plugin</artifactId>
					<version>${android.plugin.version}</version>
					<extensions>true</extensions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.jayway.maven.plugins.android.generation2</groupId>
				<artifactId>android-maven-plugin</artifactId>
				<configuration>
					<sdk>
						<platform>19</platform>
					</sdk>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin}</version>
				<!-- <configuration> <systemProperties> <property> <name>integrationMode</name> 
					<value>${integrationMode}</value> </property> </systemProperties> </configuration> -->
				<executions>
					<execution>
						<id>default-test</id>
						<configuration>
							<argLine>${surefireArgLine} -XX:-UseSplitVerifier</argLine>
							<!-- Set by Jacoco plugin -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.2.201409121644</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>unit-test-coverage-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>unit-test-coverage-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>unit-test-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.plugin}</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>quality-checks</id>
			<build>

				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven.checkstyle.plugin}</version>
						<dependencies>
							<dependency>
								<groupId>com.vagm</groupId>
								<artifactId>vagm-code-quality</artifactId>
								<version>${codequality.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>default-checkstyle-checks</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<configLocation>checkstyle_checks.xml</configLocation>
									<suppressionsLocation>checkstyle_suppressions.xml</suppressionsLocation>
									<consoleOutput>true</consoleOutput>
									<logViolationsToConsole>true</logViolationsToConsole>
									<violationSeverity>warning</violationSeverity>
									<failOnViolation>true</failOnViolation>
								</configuration>
							</execution>
						</executions>
						<!-- Use -Dcheckstyle.skipExec=true to bypass -->
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>findbugs-maven-plugin</artifactId>
						<version>${maven.findbugs.plugin}</version>
						<configuration>
							<onlyAnalyze>com.vagm.vagmdroid.-</onlyAnalyze>
							<excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
						</configuration>
						<executions>
							<execution>
								<id>default-findbugs-checks</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<includeFilterFile>findbugs.xml</includeFilterFile>
									<failOnError>true</failOnError>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<version>${maven.pmd.plugin}</version>
						<configuration>
							<failOnViolation>true</failOnViolation>
							<failurePriority>3</failurePriority>
							<aggregate>true</aggregate>
							<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
							<!-- The minimum tokens before a violation -->
							<minimumTokens>100</minimumTokens>
							<!-- Turn off if no xref report -->
							<linkXRef>true</linkXRef>
							<verbose>true</verbose>
							<targetJdk>${java.version}</targetJdk>
							<rulesets>
								<ruleset>pmd.xml</ruleset>
							</rulesets>
							<excludeRoots>
								<excludeRoot>target/generated-sources/jaxb</excludeRoot>
							</excludeRoots>
						</configuration>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
									<goal>pmd</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


</project>